<UserControl x:Class="ImageProcessingView.SegmentationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ImageProcessingView"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}"
             mc:Ignorable="d" 
             d:DesignHeight="520" d:DesignWidth="950">
    <Grid>
        <GroupBox
            Header="Card Group Box"
            Style="{DynamicResource MaterialDesignCardGroupBox}"
            Margin="0,0,3,100" Height="420" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="940">
            <ListView
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ItemsSource="{Binding Sound}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="2,0,0,0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <GroupBox
            x:Name="GrayGroup"
            Header="{Binding Name}"
            Style="{DynamicResource MaterialDesignGroupBox}"
            Margin="0 5 0 0"
            Height="80"
            Width="900"
            Grid.ColumnSpan="3"
            VerticalAlignment="Top"
            Visibility="Visible"
            materialDesign:ColorZoneAssist.Mode="Custom"
            materialDesign:ColorZoneAssist.Background="Gray"
            materialDesign:ColorZoneAssist.Foreground="Black">
                                <TextBlock>
                <TextBlock FontWeight="Bold" Text='Start time (ms):' Margin="30 -8 0 0" />
                <TextBox x:Name="StartTime" Text="{Binding StartTime}" IsReadOnly="True" TextAlignment="Center" Width="50" Margin="0 0 0 0"/>
                <TextBlock Text='End time (ms):' FontWeight="Bold" Margin="75 -8 0 0" />
                <TextBox x:Name="EndTime" Text="{Binding EndTime}" IsReadOnly="True" TextAlignment="Center" Width="50" Margin="0 0 0 0"/>
                <TextBlock Text='Duration (ms):' FontWeight="Bold" Margin="75 -8 0 0" />
                <TextBox x:Name="Duration" Text="{Binding Duration, Mode=OneWay}" IsReadOnly="True" TextAlignment="Center" Width="50" Margin="0 0 0 0"/>
                <TextBlock Text='Frequency (Hz):' FontWeight="Bold" Margin="75 -8 0 0" />
                <TextBox x:Name="Frequency" Text="{Binding Frequency}" IsReadOnly="True" TextAlignment="Center" Width="50" Margin="0 0 0 0"/>
            </TextBlock>
                            </GroupBox>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <GroupBox.HeaderTemplate>
                <DataTemplate>
                    <StackPanel
                        Orientation="Horizontal">
                        <materialDesign:PackIcon
                            Kind="QueueMusic"
                            Height="24"
                            Width="24"
                            Margin="10 0 0 0"
                            VerticalAlignment="Center" />
                        <TextBlock
          Margin="8,0,0,0"
          VerticalAlignment="Center" 
          Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
          Text="Frequencies" />
                    </StackPanel>
                </DataTemplate>
            </GroupBox.HeaderTemplate>
        </GroupBox>
        <GroupBox
            Header="Card Group Box"
            Style="{DynamicResource MaterialDesignCardGroupBox}"
            Margin="0,0,3,-24" Height="110" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="940">
            <StackPanel Margin="0,10,0,0">
                <Button
            Panel.ZIndex="20"
            Click="Generate_Click"
            Style="{StaticResource MaterialDesignRaisedLightButton}"
            IsEnabled="False"
            x:Name="GenerateButton"
            VerticalAlignment="Bottom"
            Margin="0,0,150,0"
            HorizontalAlignment="Right"
            Width="200">
                    GENERATE SOUND
                </Button>
                <TextBlock FontWeight="Bold" Text='Sample rate:' Margin="200 -24 0 0" />
                <TextBox x:Name="StartTime" Text="{Binding SampleRate, Mode=OneWay}" IsReadOnly="True" TextAlignment="Center" Width="50" Margin="0 -32 320 0"/>
            </StackPanel>
            <GroupBox.HeaderTemplate>
                <DataTemplate>
                    <StackPanel
                        Orientation="Horizontal">
                        <materialDesign:PackIcon
                            Kind="FolderMusicOutline"
                            Height="24"
                            Width="24"
                            Margin="10 0 0 0"
                            VerticalAlignment="Center" />
                        <TextBlock
          Margin="8,0,0,0"
          VerticalAlignment="Center" 
          Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
          Text="Sound generator" />
                    </StackPanel>
                </DataTemplate>
            </GroupBox.HeaderTemplate>
        </GroupBox>
    </Grid>
</UserControl>
